diff --git a/.github/workflows/validate-games.yml b/.github/workflows/validate-games.yml
new file mode 100644
index 0000000000000000000000000000000000000000..3c465670d0e5fd2bdb4e2cf72e7dd18c16e3580a
--- /dev/null
+++ b/.github/workflows/validate-games.yml
@@ -0,0 +1,23 @@
+name: Validate games catalog
+
+on:
+  pull_request:
+
+jobs:
+  validate:
+    name: Validate js/games.json
+    runs-on: ubuntu-latest
+    steps:
+      - name: Check out repository
+        uses: actions/checkout@v4
+
+      - name: Set up Python
+        uses: actions/setup-python@v5
+        with:
+          python-version: '3.x'
+
+      - name: Install jsonschema
+        run: pip install jsonschema
+
+      - name: Validate games catalog
+        run: python -m jsonschema -i js/games.json js/games.schema.json
diff --git a/index.html b/index.html
index e1063789df31a5507672b1a28002029e94768821..5834782846ba440db60498a12ab1362bb345cc05 100644
--- a/index.html
+++ b/index.html
@@ -45,86 +45,105 @@
         <ul class="sb-list">
           <li class="sb-item">
             <a href="index.html" class="sb-link sb-home" aria-label="Home" tabindex="0">
               <span class="sb-ico" aria-hidden="true">
                 <svg class="sb-svg" viewBox="0 0 24 24" aria-hidden="true"><path d="M3 10.5 12 4l9 6.5V20a1 1 0 0 1-1 1h-5v-6H9v6H4a1 1 0 0 1-1-1v-9.5Z"/></svg>
               </span>
               <span class="sb-label">Home</span>
             </a>
           </li>
           <li class="sb-item">
             <a href="#" class="sb-link" aria-label="Recently played" tabindex="0">
               <span class="sb-ico" aria-hidden="true"></span>
               <span class="sb-label">Recently played</span>
             </a>
           </li>
           <li class="sb-item">
             <a href="#" class="sb-link" aria-label="Popular" tabindex="0">
               <span class="sb-ico" aria-hidden="true"></span>
               <span class="sb-label">Popular</span>
             </a>
           </li>
         </ul>
       </nav>
     </aside>
     <main>
-      <nav class="category-bar" id="categoryBar" aria-label="Game categories"></nav>
-      <section class="grid" id="gamesGrid"></section>
+      <div id="categoryBar" class="category-bar" aria-label="Game categories"></div>
+      <div id="gamesGrid" class="grid"></div>
       <section class="ad-slot" aria-label="Advertisement">
         <ins class="adsbygoogle"
              style="display:block"
              data-ad-client="ca-pub-4054734235779751"
              data-ad-slot="6777117794"
              data-ad-format="auto"
              data-full-width-responsive="true"></ins>
       </section>
     </main>
   </div>
 
   <footer class="site-footer" role="contentinfo">
     <nav class="footer-nav" aria-label="Footer">
       <a class="ft-link" data-i18n="about" data-href-en="about.en.html" data-href-pl="about.pl.html" href="about.en.html">About</a>
       <span class="sep">•</span>
       <a class="ft-link" data-i18n="licenses" data-href-en="about/licenses.html" data-href-pl="about/licenses.html" href="about/licenses.html">Licenses</a>
       <span class="sep">•</span>
       <a class="ft-link" data-i18n="terms" data-href-en="legal/terms.en.html" data-href-pl="legal/terms.pl.html" href="legal/terms.en.html">Terms</a>
       <span class="sep">•</span>
       <a class="ft-link" data-i18n="privacy" data-href-en="legal/privacy.en.html" data-href-pl="legal/privacy.pl.html" href="legal/privacy.en.html">Privacy</a>
       <span class="sep">•</span>
       <a class="ft-link" data-i18n="contact" href="mailto:contact@kcswh.pl">Contact</a>
       <span class="sep">•</span>
       <a class="ft-link manage-cookies" data-i18n="manageCookies" href="#">Manage cookies</a>
     </nav>
     <div class="lang-switch" aria-label="Language">
       <button type="button" class="lang-btn" data-lang="pl" aria-pressed="false">PL</button>
       <button type="button" class="lang-btn" data-lang="en" aria-pressed="false">EN</button>
     </div>
   </footer>
   <script src="js/core/catalog.js" defer></script>
   <script src="js/core/game-utils.js" defer></script>
   <script src="js/core/PortalApp.js" defer></script>
-  <script src="js/portal.js" defer></script>
+  <script>
+    (function () {
+      function boot() {
+        if (!window.PortalApp) return;
+        const app = new window.PortalApp({
+          grid: document.getElementById('gamesGrid'),
+          categoryBar: document.getElementById('categoryBar'),
+          fetchImpl: (...args) => fetch(...args),
+          gamesEndpoint: 'js/games.json'
+        });
+        window.__portalApp = app;
+        app.init();
+      }
+      if (document.readyState === 'loading') {
+        document.addEventListener('DOMContentLoaded', boot);
+      } else {
+        boot();
+      }
+    })();
+  </script>
   <script src="js/sidebar.js" defer></script>
   <script src="js/loadThirdParty.js"></script>
   <script>
     (function(){
       try {
         var params = new URLSearchParams(location.search);
         var dev = params.get('dev') === '1' || localStorage.getItem('devMode') === '1';
         if (!dev) return;
         var link = document.createElement('a');
         link.href = 'https://github.com/krzysztofcal/arcadePlatform/actions/workflows/tests.yml';
         link.target = '_blank';
         link.rel = 'noopener';
         link.style.position = 'fixed';
         link.style.right = '10px';
         link.style.bottom = '10px';
         link.style.background = 'rgba(17,23,53,.85)';
         link.style.border = '1px solid #202a55';
         link.style.borderRadius = '8px';
         link.style.padding = '4px 6px';
         link.style.display = 'inline-flex';
         link.style.alignItems = 'center';
         link.style.gap = '6px';
         link.style.zIndex = '9999';
 
         var img = document.createElement('img');
diff --git a/js/core/PortalApp.js b/js/core/PortalApp.js
index 2af76f40b433ea0b92778d48aced4d52a8ff3b28..1be23390f8706446028b6d46ef2f03a80eba5254 100644
--- a/js/core/PortalApp.js
+++ b/js/core/PortalApp.js
@@ -1,29 +1,29 @@
 ﻿(function(global){
   'use strict';
 
-  const DEFAULT_CATEGORIES = Object.freeze(['New/All', 'Arcade', 'Puzzle', 'Shooter', 'Racing']);
+  const DEFAULT_CATEGORIES = Object.freeze(['All', 'Arcade', 'Puzzle', 'Shooter', 'Racing']);
   const SHARED_GAME_UTILS = global.GameUtils && typeof global.GameUtils === 'object'
     ? global.GameUtils
     : null;
 
   function isNonEmptyString(value){
     return typeof value === 'string' && value.trim().length > 0;
   }
 
   function asLocaleBlock(value){
     if (!value) return { en: '', pl: '' };
     if (typeof value === 'string'){
       const trimmed = value.trim();
       return { en: trimmed, pl: trimmed };
     }
     if (typeof value === 'object'){
       const out = { en: '', pl: '' };
       if (isNonEmptyString(value.en)) out.en = value.en.trim();
       if (isNonEmptyString(value.pl)) out.pl = value.pl.trim();
       if (!out.en && out.pl) out.en = out.pl;
       if (!out.pl && out.en) out.pl = out.en;
       return out;
     }
     return { en: '', pl: '' };
   }
 
@@ -304,114 +304,129 @@
     updateUrl(category){
       try {
         const params = new URLSearchParams(this.window.location.search);
         if (category && category !== this.defaultCategory){
           params.set('category', category);
         } else {
           params.delete('category');
         }
         const query = params.toString();
         const newUrl = `${this.window.location.pathname}${query ? `?${query}` : ''}${this.window.location.hash}`;
         if (this.window.history && typeof this.window.history.replaceState === 'function'){
           this.window.history.replaceState(null, '', newUrl);
         }
       } catch (err) {
         if (global.console && typeof global.console.debug === 'function'){
           global.console.debug('Failed to update category in URL', err);
         }
       }
     }
 
     currentCategoryList(){
       return this.filterByCategory(this.allGames, this.activeCategory);
     }
 
     renderCurrentList(reason){
-      this.renderList(this.currentCategoryList(), reason, this.activeCategory);
+      this.renderForCategory(this.activeCategory, reason);
+    }
+
+    renderForCategory(category, reason){
+      const targetCategory = category || this.defaultCategory;
+      const list = this.filterByCategory(this.allGames, targetCategory);
+      this.renderList(list, reason || 'category', targetCategory);
     }
 
     handleCategorySelect(name){
       const normalized = this.normalizeCategory(name);
       if (normalized === this.activeCategory) return;
       this.activeCategory = normalized;
       this.updateCategoryButtons();
       this.updateUrl(this.activeCategory);
-      this.renderCurrentList('category');
+      this.renderForCategory(this.activeCategory, 'category');
       if (this.analytics && typeof this.analytics.event === 'function'){
         this.analytics.event('select_content', { category: this.activeCategory });
       }
     }
 
     buildCategoryBar(){
       if (!this.categoryBar) return;
       this.categoryBar.setAttribute('role', 'toolbar');
       this.categoryBar.innerHTML = '';
       this.categoryButtons.clear();
       this.categoryItems.forEach(name => {
         const button = this.document.createElement('button');
         button.type = 'button';
         button.className = 'category-button';
         button.textContent = name;
         button.dataset.category = name;
         button.setAttribute('aria-pressed', 'false');
         button.addEventListener('click', () => this.handleCategorySelect(name));
         this.categoryButtons.set(name, button);
         this.categoryBar.appendChild(button);
       });
     }
 
     getInitialCategory(){
       try {
         const params = new URLSearchParams(this.window.location.search);
         return this.normalizeCategory(params.get('category'));
       } catch (err) {
         return this.defaultCategory;
       }
     }
 
     async loadGames(){
+      const res = await this.fetchImpl(this.gamesEndpoint, { cache: 'no-cache' });
+      if (!res || (typeof res.ok === 'boolean' && !res.ok)){
+        throw new Error('Failed to load games catalog');
+      }
+      const data = typeof res.json === 'function' ? await res.json() : null;
+      if (data && Array.isArray(data.games)) return this.normalizeList(data.games);
+      if (Array.isArray(data)) return this.normalizeList(data);
+      throw new Error('Unexpected games catalog format');
+    }
+
+    async init(){
+      let catalogError = false;
+
       try {
-        const res = await this.fetchImpl(this.gamesEndpoint, { cache: 'no-cache' });
-        if (!res || (typeof res.ok === 'boolean' && !res.ok)){
-          throw new Error('Failed to load games catalog');
-        }
-        const data = typeof res.json === 'function' ? await res.json() : null;
-        if (data && Array.isArray(data.games)) return this.normalizeList(data.games);
-        if (Array.isArray(data)) return this.normalizeList(data);
+        // Single source of truth: js/games.json
+        this.allGames = await this.loadGames(); // uses { cache: 'no-cache' } inside
       } catch (err) {
-        if (Array.isArray(global.GAMES)){
-          const legacy = global.GAMES.map(g => ({
-            id: g.id || g.slug || `game-${Math.random().toString(36).slice(2)}`,
-            slug: g.slug || g.id || '',
-            title: asLocaleBlock(g.title),
-            description: asLocaleBlock(g.subtitle),
-            thumbnail: g.thumb,
-            orientation: g.orientation,
-            category: Array.isArray(g.category) ? g.category.slice() : [],
-            source: g.href
-              ? { type: 'self', page: g.href }
-              : { type: 'placeholder' }
-          }));
-          return this.normalizeList(legacy);
-        }
-        if (global.console && typeof global.console.error === 'function'){
-          global.console.error(err);
+        catalogError = true;
+        console.error(err);
+        this.allGames = [];
+        if (this.grid){
+          this.grid.innerHTML = '<div class="meta">Catalog error. Please try again later.</div>';
         }
       }
-      return [];
-    }
 
-    async init(){
-      this.allGames = await this.loadGames();
+      // Always build category bar so the page remains usable
       this.buildCategoryBar();
+      if (catalogError) return;
+
       this.activeCategory = this.getInitialCategory();
       this.updateCategoryButtons();
       this.updateUrl(this.activeCategory);
-      this.renderCurrentList('initial');
-      this.document.addEventListener('langchange', this.onLangChange);
+
+      if (typeof this.renderForCategory === 'function') {
+        this.renderForCategory(this.activeCategory, 'init');
+      } else if (typeof this.applyCategory === 'function') {
+        this.applyCategory(this.activeCategory);
+      } else {
+        this.renderList(this.allGames, 'init', this.activeCategory);
+      }
     }
   }
 
   PortalApp.DEFAULT_CATEGORIES = DEFAULT_CATEGORIES;
+
+  if (typeof window !== 'undefined') {
+    window.PortalApp = window.PortalApp || PortalApp;
+    if (!Array.isArray(window.PortalApp.DEFAULT_CATEGORIES)) {
+      window.PortalApp.DEFAULT_CATEGORIES = ['All', 'Arcade', 'Puzzle'];
+    }
+  }
+
   global.PortalApp = PortalApp;
-})(window);
+})(typeof window !== 'undefined' ? window : globalThis);
 
diff --git a/js/frame.js b/js/frame.js
index 4f29a38e638162d1b95d0d566a58509bbb2ee143..5b7968e7a9bee4e7763dfbed8a2618c57430b60a 100644
--- a/js/frame.js
+++ b/js/frame.js
@@ -170,65 +170,55 @@
   }
 
   function enterFs(){
     pendingFsAction = { trigger: 'button', requested: 'enter' };
     try { frameWrap.requestFullscreen && frameWrap.requestFullscreen(); } catch {}
   }
   function exitFs(){
     pendingFsAction = { trigger: 'button', requested: 'exit' };
     try { document.exitFullscreen && document.exitFullscreen(); } catch {}
   }
 
   function normalizeList(rawList){
     if (catalog && typeof catalog.normalizeGameList === 'function'){
       return catalog.normalizeGameList(rawList);
     }
     return Array.isArray(rawList) ? rawList.filter(Boolean) : [];
   }
 
   async function loadCatalog(){
     try {
       const res = await fetch('js/games.json', { cache: 'no-cache' });
       if (!res.ok) throw new Error('Failed to load games.json');
       const data = await res.json();
       if (data && Array.isArray(data.games)) return normalizeList(data.games);
       if (Array.isArray(data)) return normalizeList(data);
+      throw new Error('Unexpected games catalog format');
     } catch (e) {
-      if (Array.isArray(window.GAMES)){
-        return normalizeList(window.GAMES.map(g => ({
-          id: g.id || g.slug || 'game-'+Math.random().toString(36).slice(2),
-          slug: g.slug || (g.id || ''),
-          title: g.title,
-          description: g.subtitle ? g.subtitle : { en: '', pl: '' },
-          thumbnail: g.thumb,
-          orientation: g.orientation,
-          source: g.href ? { type: 'self', page: g.href } : { type: 'placeholder' }
-        })));
-      }
       console.error(e);
+      return [];
     }
-    return [];
   }
 
   function waitForConsent(timeoutMs){
     return new Promise(resolve => {
       const start = Date.now();
       function giveUp(){ resolve({ ok:true, reason:'no-cmp' }); }
       if (typeof window.__tcfapi !== 'function'){
         // No CMP present; proceed after short delay (dev/staging)
         setTimeout(giveUp, 300);
         return;
       }
       // First, try immediate TCData
       try {
         window.__tcfapi('getTCData', 2, function(tcData, success){
           if (success && tcData && (tcData.eventStatus === 'tcloaded' || tcData.eventStatus === 'useractioncomplete')){
             resolve({ ok:true, tcData });
           } else {
             // Subscribe to changes
             window.__tcfapi('addEventListener', 2, function(tcData2, success2){
               if (success2 && tcData2 && (tcData2.eventStatus === 'tcloaded' || tcData2.eventStatus === 'useractioncomplete')){
                 resolve({ ok:true, tcData: tcData2 });
               } else if (Date.now() - start > (timeoutMs || 10000)){
                 resolve({ ok:true, reason:'timeout' });
               }
             });
@@ -410,82 +400,113 @@
         card.appendChild(placeholder);
       }
       const body = document.createElement('div');
       body.className = 'similarBody';
       const heading = document.createElement('h3');
       heading.textContent = title;
       body.appendChild(heading);
       const metaWrap = document.createElement('div');
       metaWrap.className = 'similarMeta';
       const metaItems = (g.category && g.category.length ? g.category : (g.tags || [])).slice(0, 2);
       metaItems.forEach(item => {
         const span = document.createElement('span');
         span.className = 'metaChip';
         span.textContent = item;
         metaWrap.appendChild(span);
       });
       if (metaWrap.childElementCount){
         body.appendChild(metaWrap);
       }
       card.appendChild(body);
       similarList.appendChild(card);
     });
     similarSection.hidden = false;
   }
 
-  function showNotFound(message, titleText){
+  function showEmptyState(titleText, message, options){
     const text = message || 'Game not found.';
     const heading = titleText || 'Game not found';
+    const linkHref = options && options.linkHref ? options.linkHref : '';
+    const linkLabel = options && options.linkLabel ? options.linkLabel : 'Browse games';
     setDocTitle(heading);
     updateMetaTags({ title: heading, description: text, slug: currentSlug });
     if (descriptionEl) descriptionEl.textContent = text;
     if (introSection){
       introSection.hidden = true;
       introSection.style.display = 'none';
     }
     if (metaEl) metaEl.textContent = text;
     if (frameWrap) frameWrap.classList.add('empty');
-    if (frameBox) frameBox.innerHTML = '<div class="emptyState">' + text + '</div>';
+    if (frameBox){
+      let inner = '<div class="emptyState"><p>' + text + '</p>';
+      if (linkHref){
+        inner += '<p><a class="emptyStateLink" href="' + linkHref + '">' + linkLabel + '</a></p>';
+      }
+      inner += '</div>';
+      frameBox.innerHTML = inner;
+    }
     if (consentOverlay) consentOverlay.classList.add('hidden');
     if (rotateOverlay) rotateOverlay.classList.add('hidden');
     if (btnEnter) btnEnter.style.display = 'none';
     if (btnExit) btnExit.style.display = 'none';
     if (similarSection) similarSection.hidden = true;
     if (similarList) similarList.innerHTML = '';
   }
 
+  function showCatalogError(){
+    showEmptyState('Catalog error', 'Catalog error. Please try again later.', {
+      linkHref: 'index.html',
+      linkLabel: 'Return to home'
+    });
+  }
+
   async function init(){
-    const slug = qsParam('slug');
-    currentSlug = slug || '';
-    const list = await loadCatalog();
+    const slug = qsParam('slug') || '';
+    currentSlug = slug;
+
+    let list;
+    try {
+      list = await loadCatalog();
+    } catch (err) {
+      console.error(err);
+      showCatalogError();
+      return;
+    }
+
     const lang = getLang();
-    const game = list.find(g => (g.slug === slug));
+    const game = list.find(g => g.slug === slug);
+
     if (!slug || !game){
-      showNotFound(slug ? 'Game not found.' : 'Choose a game from the catalog to start playing.', slug ? 'Game not found' : 'No game selected');
+      showEmptyState(
+        slug ? 'Game not found' : 'No game selected',
+        slug ? 'Game not found.' : 'Choose a game from the catalog to start playing.',
+        { linkHref: 'index.html', linkLabel: 'Browse games' }
+      );
       return;
     }
 
+    // ↓ keep your existing render/meta/iframe logic below this line
     const title = (game.title && (game.title[lang] || game.title.en)) || 'Game';
     const desc = (game.description && (game.description[lang] || game.description.en)) || '';
     if (frameWrap) frameWrap.classList.remove('empty');
     if (frameBox && frameBox.querySelector('.emptyState')) frameBox.innerHTML = '';
     if (btnEnter) btnEnter.style.display = '';
     if (btnExit) btnExit.style.display = 'none';
     setDocTitle(title);
     updateMetaTags({ title, description: desc || DEFAULT_DESCRIPTION, slug });
     renderHero(game, title, desc);
     renderMetaBar(game);
     renderSimilarGames(game, list, lang);
     if (metaEl && !metaEl.textContent){
       metaEl.textContent = desc || 'More details coming soon.';
     }
     track('viewGame', {
       slug: slug || undefined,
       lang,
       title,
       source: game.source && game.source.type || undefined
     });
 
     updateRotateOverlay(game.orientation || 'any');
     addEventListener('resize', () => updateRotateOverlay(game.orientation || 'any'));
 
     // If self-hosted, redirect to dedicated page
diff --git a/js/games.js b/js/games.js
deleted file mode 100644
index bb1fdd3f464dc67cbf3cd393068bee5c7ae4a000..0000000000000000000000000000000000000000
--- a/js/games.js
+++ /dev/null
@@ -1,14 +0,0 @@
-// Data-driven games list for the portal
-window.GAMES = [
-  { id: 'game1',
-    title: { pl: 'Łap koty — Arcade', en: 'Catch Cats — Arcade' },
-    href: 'game_cats.html',
-    subtitle: { pl: 'Kliknij, aby otworzyć stronę gry.', en: 'Click to open the game.' }
-  },
-  { id: 'game2', title: { pl: 'Gra 2', en: 'Game 2' }, href: null, subtitle: { pl: 'W przygotowaniu', en: 'Under construction' } },
-  { id: 'game3', title: { pl: 'Gra 3', en: 'Game 3' }, href: null, subtitle: { pl: 'W przygotowaniu', en: 'Under construction' } },
-  { id: 'game4', title: { pl: 'Gra 4', en: 'Game 4' }, href: null, subtitle: { pl: 'W przygotowaniu', en: 'Under construction' } },
-  { id: 'game5', title: { pl: 'Gra 5', en: 'Game 5' }, href: null, subtitle: { pl: 'W przygotowaniu', en: 'Under construction' } },
-  { id: 'game6', title: { pl: 'Gra 6', en: 'Game 6' }, href: null, subtitle: { pl: 'W przygotowaniu', en: 'Under construction' } },
-  { id: 'game7', title: { pl: 'Gra 7', en: 'Game 7' }, href: null, subtitle: { pl: 'W przygotowaniu', en: 'Under construction' } }
-];
diff --git a/js/games.json b/js/games.json
index c53c00da52590dd6e54b0efa9e148633a287e325..b8a6ac32d33069b636e3f31cc6626f9e82eb90fa 100644
--- a/js/games.json
+++ b/js/games.json
@@ -1,374 +1,24 @@
-﻿{
-    "version":  2,
-    "games":  [
-                  {
-                      "id":  "cats-arcade",
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "slug":  "catch-cats",
-                      "title":  {
-                                    "en":  "Catch Cats — Arcade",
-                                    "pl":  "Łap koty — Arcade"
-                                },
-                      "description":  {
-                                          "en":  "Catch cats and score points!",
-                                          "pl":  "Łap koty i zdobywaj punkty!"
-                                      },
-                      "category":  [
-                                       "Arcade"
-                                   ],
-                      "tags":  [
-                                   "arcade",
-                                   "casual",
-                                   "skill"
-                               ],
-                      "source":  {
-                                     "type":  "self",
-                                     "page":  "game_cats.html"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "placeholder-2",
-                      "slug":  "coming-soon-2",
-                      "title":  {
-                                    "en":  "Game 2",
-                                    "pl":  "Gra 2"
-                                },
-                      "description":  {
-                                          "en":  "Under construction",
-                                          "pl":  "W przygotowaniu"
-                                      },
-                      "category":  [
-                                       "Arcade"
-                                   ],
-                      "tags":  [
-                                   "coming-soon"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "any"
-                  },
-                  {
-                      "id":  "gd-2048-classic",
-                      "slug":  "2048-classic",
-                      "title":  {
-                                    "en":  "2048 Classic",
-                                    "pl":  "2048 Classic"
-                                },
-                      "description":  {
-                                          "en":  "Under construction",
-                                          "pl":  "W przygotowaniu"
-                                      },
-                      "category":  [
-                                       "Puzzle"
-                                   ],
-                      "tags":  [
-                                   "puzzle",
-                                   "logic",
-                                   "casual"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-bubble-shooter",
-                      "slug":  "bubble-shooter",
-                      "title":  {
-                                    "en":  "Bubble Shooter",
-                                    "pl":  "Bubble Shooter"
-                                },
-                      "description":  {
-                                          "en":  "Under construction",
-                                          "pl":  "W przygotowaniu"
-                                      },
-                      "category":  [
-                                       "Puzzle",
-                                       "Shooter"
-                                   ],
-                      "tags":  [
-                                   "arcade",
-                                   "match3",
-                                   "casual"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-solitaire-klondike",
-                      "slug":  "solitaire-klondike",
-                      "title":  {
-                                    "en":  "Solitaire Klondike",
-                                    "pl":  "Solitaire Klondike"
-                                },
-                      "description":  {
-                                          "en":  "Classic Klondike patience.",
-                                          "pl":  "Classic Klondike patience."
-                                      },
-                      "category":  [
-                                       "Puzzle"
-                                   ],
-                      "tags":  [
-                                   "cards",
-                                   "casual"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-sudoku",
-                      "slug":  "sudoku",
-                      "title":  {
-                                    "en":  "Sudoku",
-                                    "pl":  "Sudoku"
-                                },
-                      "description":  {
-                                          "en":  "Fill the grid with 1â€“9 without repeats.",
-                                          "pl":  "Fill the grid with 1â€“9 without repeats."
-                                      },
-                      "category":  [
-                                       "Puzzle"
-                                   ],
-                      "tags":  [
-                                   "puzzle",
-                                   "logic"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-mahjong-tiles",
-                      "slug":  "mahjong-tiles",
-                      "title":  {
-                                    "en":  "Mahjong Tiles",
-                                    "pl":  "Mahjong Tiles"
-                                },
-                      "description":  {
-                                          "en":  "Match open pairs of identical tiles.",
-                                          "pl":  "Match open pairs of identical tiles."
-                                      },
-                      "category":  [
-                                       "Puzzle"
-                                   ],
-                      "tags":  [
-                                   "board",
-                                   "puzzle"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "landscape"
-                  },
-                  {
-                      "id":  "gd-endless-runner",
-                      "slug":  "endless-runner",
-                      "title":  {
-                                    "en":  "Endless Runner",
-                                    "pl":  "Endless Runner"
-                                },
-                      "description":  {
-                                          "en":  "Dodge obstacles and collect coins.",
-                                          "pl":  "Dodge obstacles and collect coins."
-                                      },
-                      "category":  [
-                                       "Arcade"
-                                   ],
-                      "tags":  [
-                                   "runner",
-                                   "reflex",
-                                   "arcade"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-street-basketball",
-                      "slug":  "street-basketball",
-                      "title":  {
-                                    "en":  "Street Basketball",
-                                    "pl":  "Street Basketball"
-                                },
-                      "description":  {
-                                          "en":  "Swipe to shoot hoops and beat the timer.",
-                                          "pl":  "Swipe to shoot hoops and beat the timer."
-                                      },
-                      "category":  [
-                                       "Arcade"
-                                   ],
-                      "tags":  [
-                                   "sports",
-                                   "arcade"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-penalty-kicks",
-                      "slug":  "penalty-kicks",
-                      "title":  {
-                                    "en":  "Penalty Kicks",
-                                    "pl":  "Penalty Kicks"
-                                },
-                      "description":  {
-                                          "en":  "Aim and score from the spot.",
-                                          "pl":  "Aim and score from the spot."
-                                      },
-                      "category":  [
-                                       "Arcade"
-                                   ],
-                      "tags":  [
-                                   "sports",
-                                   "football"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-parking-challenge",
-                      "slug":  "parking-challenge",
-                      "title":  {
-                                    "en":  "Parking Challenge",
-                                    "pl":  "Parking Challenge"
-                                },
-                      "description":  {
-                                          "en":  "Park without crashing in tricky levels.",
-                                          "pl":  "Park without crashing in tricky levels."
-                                      },
-                      "category":  [
-                                       "Racing"
-                                   ],
-                      "tags":  [
-                                   "driving",
-                                   "logic"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-word-search",
-                      "slug":  "word-search",
-                      "title":  {
-                                    "en":  "Word Search",
-                                    "pl":  "Word Search"
-                                },
-                      "description":  {
-                                          "en":  "Find hidden words in the grid.",
-                                          "pl":  "Find hidden words in the grid."
-                                      },
-                      "category":  [
-                                       "Puzzle"
-                                   ],
-                      "tags":  [
-                                   "word",
-                                   "puzzle"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-match-3-jewels",
-                      "slug":  "match-3-jewels",
-                      "title":  {
-                                    "en":  "Match‑3 Jewels",
-                                    "pl":  "Match‑3 Jewels"
-                                },
-                      "description":  {
-                                          "en":  "Swap gems to create lines and combos.",
-                                          "pl":  "Swap gems to create lines and combos."
-                                      },
-                      "category":  [
-                                       "Puzzle"
-                                   ],
-                      "tags":  [
-                                   "match3",
-                                   "arcade",
-                                   "casual"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "gd-dart-challenge",
-                      "slug":  "dart-challenge",
-                      "title":  {
-                                    "en":  "Dart Challenge",
-                                    "pl":  "Dart Challenge"
-                                },
-                      "description":  {
-                                          "en":  "Aim carefully and hit the target.",
-                                          "pl":  "Aim carefully and hit the target."
-                                      },
-                      "category":  [
-                                       "Shooter"
-                                   ],
-                      "tags":  [
-                                   "sports",
-                                   "skill"
-                               ],
-                      "thumbnail":  "img/games/placeholder.svg",
-                      "source":  {
-                                     "type":  "placeholder"
-                                 },
-                      "orientation":  "portrait"
-                  },
-                  {
-                      "id":  "t-rex",
-                      "slug":  "t-rex-runner",
-                      "title":  {
-                                    "en":  "T-Rex Runner",
-                                    "pl":  "T-Rex Biegacz"
-                                },
-                      "description":  {
-                                          "en":  "Dash through the desert and leap over cacti in this offline classic.",
-                                          "pl":  "Pędź przez pustynię i przeskakuj kaktusy w tym klasycznym runnerze offline."
-                                      },
-                      "category":  [
-                                       "Arcade"
-                                   ],
-                      "tags":  [
-                                   "runner",
-                                   "endless",
-                                   "retro",
-                                   "dinosaur"
-                               ],
-                      "thumbnail":  "img/games/trex-runner.svg",
-                      "source":  {
-                                     "type":  "self",
-                                     "page":  "game_trex.html"
-                                 },
-                      "orientation":  "landscape"
-                  }
-              ]
+{
+  "games": [
+    {
+      "id": "trex",
+      "slug": "trex",
+      "title": { "en": "T-Rex Runner", "pl": "T-Rex Biegacz" },
+      "description": { "en": "Jump over cacti!", "pl": "Skacz nad kaktusami!" },
+      "category": ["Arcade"],
+      "thumbnail": "img/trex-thumb.jpg",
+      "tags": ["runner", "classic"],
+      "source": { "type": "self", "page": "games/trex/index.html" }
+    },
+    {
+      "id": "cats",
+      "slug": "cats",
+      "title": { "en": "Catch the Cats", "pl": "Złap koty" },
+      "description": { "en": "Catch the falling cats!", "pl": "Złap spadające koty!" },
+      "category": ["Puzzle"],
+      "thumbnail": "img/cats-thumb.jpg",
+      "tags": ["reflex", "casual"],
+      "source": { "type": "self", "page": "games/cats/index.html" }
+    }
+  ]
 }
diff --git a/js/games.schema.json b/js/games.schema.json
index bf84f9b9d48dc293b98a2e2f943279afd0fa5e67..91fa05d4cc3405cab660588ac976bd855ca90db1 100644
--- a/js/games.schema.json
+++ b/js/games.schema.json
@@ -1,66 +1,77 @@
 {
-  "$schema": "https://json-schema.org/draft/2020-12/schema",
-  "title": "Arcade platform games catalog v2",
+  "$schema": "http://json-schema.org/draft-07/schema#",
+  "$id": "https://example.com/schemas/games.schema.json",
+  "title": "Arcade Platform Games Catalog",
   "type": "object",
-  "required": ["version", "games"],
+  "required": ["games"],
+  "additionalProperties": false,
   "properties": {
-    "version": { "const": 2 },
     "games": {
       "type": "array",
-      "items": { "$ref": "#/$defs/game" }
+      "items": { "$ref": "#/$defs/game" },
+      "minItems": 1,
+      "uniqueItems": true
     }
   },
-  "additionalProperties": false,
   "$defs": {
-    "localizedString": {
+    "localizedText": {
       "type": "object",
       "required": ["en", "pl"],
+      "additionalProperties": false,
       "properties": {
         "en": { "type": "string", "minLength": 1 },
         "pl": { "type": "string", "minLength": 1 }
-      },
-      "additionalProperties": false
-    },
-    "stringArray": {
-      "type": "array",
-      "items": { "type": "string", "minLength": 1 }
+      }
     },
     "source": {
       "type": "object",
       "required": ["type"],
+      "additionalProperties": false,
       "properties": {
-        "type": { "enum": ["self", "distributor", "placeholder"] },
+        "type": {
+          "type": "string",
+          "enum": ["self", "distributor", "placeholder"]
+        },
         "page": { "type": "string", "minLength": 1 },
-        "embedUrl": { "type": "string", "minLength": 1 },
+        "embedUrl": { "type": "string", "format": "uri" },
         "distributor": { "type": "string", "minLength": 1 }
       },
-      "additionalProperties": false,
-      "allOf": [
-        {
-          "if": { "properties": { "type": { "const": "self" } } },
-          "then": { "required": ["page"] }
-        },
-        {
-          "if": { "properties": { "type": { "const": "distributor" } } },
-          "then": { "required": ["embedUrl"] }
-        }
+      "anyOf": [
+        { "required": ["page"] },
+        { "required": ["embedUrl"] }
       ]
     },
     "game": {
       "type": "object",
-      "required": ["id", "slug", "title", "source"],
+      "required": [
+        "id",
+        "slug",
+        "title",
+        "description",
+        "category",
+        "thumbnail",
+        "tags",
+        "source"
+      ],
+      "additionalProperties": false,
       "properties": {
         "id": { "type": "string", "minLength": 1 },
         "slug": { "type": "string", "minLength": 1 },
-        "title": { "$ref": "#/$defs/localizedString" },
-        "description": { "$ref": "#/$defs/localizedString" },
-        "category": { "$ref": "#/$defs/stringArray" },
-        "tags": { "$ref": "#/$defs/stringArray" },
+        "title": { "$ref": "#/$defs/localizedText" },
+        "description": { "$ref": "#/$defs/localizedText" },
+        "category": {
+          "type": "array",
+          "items": { "type": "string", "minLength": 1 },
+          "minItems": 1
+        },
         "thumbnail": { "type": "string", "minLength": 1 },
-        "orientation": { "enum": ["portrait", "landscape", "any"] },
+        "tags": {
+          "type": "array",
+          "items": { "type": "string", "minLength": 1 },
+          "minItems": 1
+        },
         "source": { "$ref": "#/$defs/source" }
-      },
-      "additionalProperties": false
+      }
     }
   }
 }
 
